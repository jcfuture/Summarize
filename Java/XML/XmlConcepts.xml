<?xml version="1.0" encoding="UTF-8"?>
<concepts xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
    xmlns = "http://www.itcast.cn/xml"
    xsi:Schemalocation = "http://www.itcase.cn/xml Student.xsd">
    <!--XML组成部分
        1.文档声明：
            1.格式：<?xml 属性列表?>
            2.属性列表
                version：版本号，必须的属性
                encoding：编码格式，告知解析引擎当前文档使用的字符集，如：ISO-8859-1
                standalone：是否独立
                    取值：yes：不依赖其他文件
                        no：依赖其他文件
        2.指令（了解）结合CSS的
            <?xml-stylesheet type="text/css" href="a.css" ?>
        3.标签：标签名称自定义的：
            规则：名称可以包含字母，数字，以及其他字符
                名称不能以数字或标点符号开始
                名称本恩以字母xml或（XML，Xml等）开始
                名称不能包含空格
        4.属性：id属性值唯一
        5.文本：CDTA区：在该区域中的数据会被原样展示
                格式：<![CDTA[数据]]>
        6.约束：在规定的XML文档的书写规则
            作为框架的使用者（程序员）
                1.能够在xml中引入约束文档
                2.能够简单的读懂约束文档
            分类：
                1.DTD:一种简单的约束技术
                    DTD：引入dtd文档到XML文档中
                        内部tdt：将约束规则定义在XML文档中
                        外部tdt：将约束的规则定义在外部的dtd文档中
                            本地：<!DOCTYDE 根标签名 SYSTEM “dtd文件的位置”>
                            网络：<!DOCTYDE 根标签名 PUBLIC “dtd文件的位置” “dtd文件的位置URL”>
                2.Schema：一种复杂的约束技术
                    Schema：
                        引入：
                            1.填写XMl的根元素
                            2.引入XSI前缀：xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                            3.引入xsd文件命名空间 xsi=schema location="http://www.itcast.cn/xml Student.xsd"
                            4.为每个xsd约束声明一个前缀，作为标识，xmlns=“http://www.itcast.cn/xml”
                            <students   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                            xmlns="http://www.itcast.cn/xml"
                			xsi:schemaLocation="http://www.itcast.cn/xml  student.xsd"
                            >-->
    <!--解析：操作xml文档，将文档中的数据读取到内存中
            操作xml文档：
                1.解析（读取）：将文档中的数据读取到内存中
                2。写入：将内存中的数据保存到xml文档中，持久化的存储
            解析xml的方法：
                1.DOM：将标记语言一次性加载进内存，在内存中形成一颗dom树
                   优点：操作方便，剋对文档进行CRUD的所有操作
                   缺点：占内存
               2.SAX：逐行读取，基于事件驱动的
                   优点：不占内存
                   缺点：只能读取，不能增删改        -->

    <!--XML常见的解析器：
        1.JAXP：sun公司提供解析器，是支持dom和SAX两种思想
        2.DOM4J：一款优秀的解析器
        3.Jsoup：是一款Java的HTML解析器，可以解析某个URL地址，HTML文本内容。它提供了一套非常有力的API，可以通过DOM，CSS
            以及类似于JQuery的操作方法来去除和操作数据
        4.PULL：Android内置系统解析器，SAX方式的-->
</concepts>